/*
 * generated by Xtext 2.12.0
 */
package com.andredidier.multilingualtexteditor.validation

import com.andredidier.multilingualtexteditor.multilingualTextEditor.LanguageCode
import com.andredidier.multilingualtexteditor.multilingualTextEditor.MultilingualTextEditorPackage
import com.andredidier.multilingualtexteditor.multilingualTextEditor.Text
import com.andredidier.multilingualtexteditor.multilingualTextEditor.TextualContent
import org.eclipse.emf.ecore.EObject
import org.eclipse.xtext.validation.Check

/**
 * This class contains custom validation rules. 
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#validation
 */
class MultilingualTextEditorValidator extends AbstractMultilingualTextEditorValidator {

//	public static val INVALID_NAME = 'invalidName'
//
//	@Check
//	def checkGreetingStartsWithCapital(Greeting greeting) {
//		if (!Character.isUpperCase(greeting.name.charAt(0))) {
//			warning('Name should start with a capital', 
//					MultilingualTextEditorPackage.Literals.GREETING__NAME,
//					INVALID_NAME)
//		}
//	}
	@Check
	def checkAllLanguages(Text text) {
	}

	def Text getRoot(EObject o) {
		if (o instanceof Text) {
			return o;
		} else if (o.eContainer !== null) {
			return o.eContainer.root;
		} else {
			return null;
		}
	}

	def format(LanguageCode lc) {
		'''«lc.value»«IF lc.countryCode!==null»_«lc.countryCode.value»«IF lc.countryCode.variantCode!==null»_«
		lc.countryCode.variantCode»«ENDIF»«ENDIF»'''
	}
	
	def equivalent(LanguageCode l1, LanguageCode l2) {
		return l1.value == l2.value && l1.countryCode.value == l2.countryCode.value && 
			l1.countryCode.variantCode == l2.countryCode.variantCode;
	}

	@Check
	def checkAllLanguages(TextualContent textualContent) {
		for (lc : textualContent.root.languageCodes) {
			val found = textualContent.values.exists[it.languageCode.equivalent(lc)];
			if (!found) {
				error("Text not translated for " + lc.format,
					MultilingualTextEditorPackage.Literals.TEXTUAL_CONTENT__VALUES, "missingTranslation");
			}
		}
	}

}
